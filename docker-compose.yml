version: '3.8'

services:
  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./configs/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
    networks:
      - aws-monitoring

  # AWS Monitor Application
  aws-monitor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aws-monitor
    restart: unless-stopped
    volumes:
      - ./configs/config.yaml:/app/configs/config.yaml:ro
    ports:
      - "8080:8080"   # Health check endpoint
    environment:
      - CONFIG_FILE_PATH=/app/configs/config.yaml
    depends_on:
      - otel-collector
    networks:
      - aws-monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Grafana (for visualizing metrics)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - aws-grafana-storage:/var/lib/grafana
    networks:
      - aws-monitoring
  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: aws-monitor-clickhouse
    restart: unless-stopped
    environment:
      - CLICKHOUSE_PASSWORD=admin
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - aws-grafana-storage:/var/lib/clickhouse
    networks:
      - aws-monitoring


networks:
  aws-monitoring:
    driver: bridge

volumes:
  aws-clickhouse-storage:
  aws-grafana-storage: